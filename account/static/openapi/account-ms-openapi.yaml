openapi: 3.0.3
info:
  title: Account Microservice API
  version: 1.0.0
  description: API de cuentas para Banking-MS
servers:
  - url: http://localhost:8082
paths:
  /cuentas:
    get:
      summary: Listar cuentas
      tags: [Cuentas]
      responses:
        '200':
          description: Lista de cuentas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BankAccount'
    post:
      summary: Crear cuenta
      tags: [Cuentas]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '201':
          description: Cuenta creada (saldo inicial 0.0)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
        '400':
          description: Error de negocio o validaciÃ³n
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cuentas/{id}:
    get:
      summary: Obtener cuenta por id
      tags: [Cuentas]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, format: int64 }
      responses:
        '200':
          description: Cuenta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Eliminar cuenta
      tags: [Cuentas]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, format: int64 }
      responses:
        '204':
          description: Eliminada
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cuentas/{id}/depositar:
    put:
      summary: Depositar a la cuenta
      tags: [Cuentas]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, format: int64 }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmountRequest'
      responses:
        '200':
          description: Saldo actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
        '400':
          description: Error de negocio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cuentas/{id}/retirar:
    put:
      summary: Retirar de la cuenta
      tags: [Cuentas]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, format: int64 }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmountRequest'
      responses:
        '200':
          description: Saldo actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
        '400':
          description: Regla de negocio (ahorros >= 0; corriente >= -500)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    AccountType:
      type: string
      enum: [AHORROS, CORRIENTE]
    BankAccount:
      type: object
      properties:
        id: { type: integer, format: int64 }
        accountNumber: { type: string }
        balance: { type: number, format: double }
        type: { $ref: '#/components/schemas/AccountType' }
        overdraftLimit: { type: number, format: double }
        clienteId: { type: integer, format: int64 }
      required: [id, accountNumber, balance, type, overdraftLimit, clienteId]
    CreateAccountRequest:
      type: object
      properties:
        clienteId: { type: integer, format: int64 }
        tipoCuenta: { $ref: '#/components/schemas/AccountType' }
      required: [clienteId, tipoCuenta]
    AmountRequest:
      type: object
      properties:
        monto:
          type: number
          format: double
          minimum: 1
      required: [monto]
    ErrorResponse:
      type: object
      properties:
        code: { type: string }
        message: { type: string }
        errors:
          type: object
          additionalProperties: { type: string }