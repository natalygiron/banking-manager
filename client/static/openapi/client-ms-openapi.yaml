openapi: 3.0.3
info:
  title: Customer Microservice API
  version: 1.0.0
  description: API de clientes para Banking-MS
servers:
  - url: http://localhost:8081
paths:
  /clientes:
    get:
      summary: Listar clientes
      tags: [Clientes]
      responses:
        '200':
          description: Lista de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
    post:
      summary: Crear cliente
      tags: [Clientes]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientRequest'
      responses:
        '201':
          description: Cliente creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Error de validación o de negocio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /clientes/{id}:
    get:
      summary: Obtener cliente por id
      tags: [Clientes]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, format: int64 }
      responses:
        '200':
          description: Cliente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Actualizar cliente
      tags: [Clientes]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, format: int64 }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientRequest'
      responses:
        '200':
          description: Cliente actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Eliminar cliente
      tags: [Clientes]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, format: int64 }
      responses:
        '204':
          description: Eliminado
        '404':
          description: No encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Client:
      type: object
      properties:
        id: { type: integer, format: int64 }
        nombre: { type: string, maxLength: 50 }
        apellido: { type: string, maxLength: 50 }
        dni: { type: string, maxLength: 20 }
        email: { type: string, format: email, maxLength: 100 }
      required: [id, nombre, apellido, dni]
    CreateClientRequest:
      type: object
      properties:
        nombre: { type: string, maxLength: 50 }
        apellido: { type: string, maxLength: 50 }
        dni: { type: string, maxLength: 20 }
        email: { type: string, format: email, maxLength: 100 }
      required: [nombre, apellido, dni]
    UpdateClientRequest:
      type: object
      properties:
        nombre: { type: string, maxLength: 50 }
        apellido: { type: string, maxLength: 50 }
        email: { type: string, format: email, maxLength: 100 }
      required: [nombre, apellido]
    ErrorResponse:
      type: object
      properties:
        code: { type: string }
        message: { type: string }
        errors:
          type: object
          additionalProperties: